<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>